function fc = GetContactForcesFWP(fnet, n)
% We have issues with the FWP for each leg using MPT3.
% Notice that in the half space form, the last 3 columns are all zeros...
% We instead use the FFP and enforce n = cross(r,f).

%% robot specs

% load("FWP_each_foot.mat");
% 
% FWPFL = Polyhedron('V',V_FWPFL);
% FWPFR = Polyhedron('V',V_FWPFR);
% FWPHL = Polyhedron('V',V_FWPHL);
% FWPHR = Polyhedron('V',V_FWPHR);

load("FFP.mat")

params = getMiniCheetahParams();
robot_tree = buildTreeModel(params);
pos = [0,0,0.18]';
eul = zeros(3,1);
qleg = [0,-1.04049327787845,2.22044586943330];

rNominal = zeros(4,3);

% [fr;fl;hr;hl]
for leg = 1:4
    rNominal(leg,:) = forward_kinematics(pos, eul, qleg', leg);
end

COM = [0 0 0.18]'; % COM position relative to "contact point"
r2COM = zeros(4,length(COM));
for leg = 1:4
    r2COM(leg,:) = rNominal(leg,:) - COM';
end

%% LP

nForces = length(fnet(1,:));
fc = sdpvar(3,4,nForces,'full');
nc = sdpvar(3,4,nForces,'full');
S = sdpvar(1,nForces,'full');

constr = [];

for i = 1:nForces
%     constr = [constr, ...
%               FWPFL.A*[fc(:,1,i);nc(:,1,i)] <= FWPFL.b - S(i), ...
%               FWPFR.A*[fc(:,2,i);nc(:,2,i)] <= FWPFR.b - S(i), ...
%               FWPHL.A*[fc(:,3,i);nc(:,3,i)] <= FWPHL.b - S(i), ...
%               FWPHR.A*[fc(:,4,i);nc(:,4,i)] <= FWPHR.b - S(i), ...
%               fnet(:,i) == fc(:,1,i) + fc(:,2,i) + fc(:,3,i) + fc(:,4,i), ...
%               n(:,i) == nc(:,1,i) + nc(:,2,i) + nc(:,3,i) + nc(:,4,i), ...
%               S(i) >= 0
%               ];
          
    constr = [constr, ...
              FFPFR.A*fc(:,1,i) <= FFPFR.b - S(i), ...
              FFPFL.A*fc(:,2,i) <= FFPFL.b - S(i), ...
              FFPHR.A*fc(:,3,i) <= FFPHR.b - S(i), ...
              FFPHL.A*fc(:,4,i) <= FFPHL.b - S(i), ...
              fnet(:,i) == fc(:,1,i) + fc(:,2,i) + fc(:,3,i) + fc(:,4,i), ...
              n(:,i) == nc(:,1,i) + nc(:,2,i) + nc(:,3,i) + nc(:,4,i), ...
              S(i) >= 0
              ];
          
    for leg = 1:4
        constr = [constr, ...
                  nc(:,leg,i) == skew(r2COM(leg,:)',*fc(:,leg,i))];
    end
end


objective = 0;
% for i = 1:nForces
%     objective = objective - S(i);
% end


options = sdpsettings('verbose',2,'solver','GUROBI','debug',1);
sol = optimize(constr,objective,options);

fc = value(fc);
